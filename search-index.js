var searchIndex = {};
searchIndex['glutin'] = {"items":[[0,"","glutin","The purpose of this library is to provide an OpenGL context on as many\n platforms as possible."],[1,"MonitorID","","Identifier for a monitor."],[1,"WindowBuilder","","Object that allows you to build windows."],[1,"HeadlessRendererBuilder","","Object that allows you to build headless contexts."],[1,"Window","","Represents an OpenGL context and the Window or environment around it."],[1,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.\n"],[1,"HeadlessContext","","Represents a headless OpenGL context."],[1,"PollEventsIterator","","An iterator for the `poll_events` function."],[1,"WaitEventsIterator","","An iterator for the `wait_events` function."],[1,"AvailableMonitorsIter","","An iterator for the list of available monitors."],[2,"Event","",""],[12,"Resized","","The size of the window has changed.",0],[12,"Moved","","The position of the window has changed.",0],[12,"Closed","","The window has been closed.",0],[12,"ReceivedCharacter","","The window received a unicode character.",0],[12,"Focused","","The window gained or lost focus.",0],[12,"KeyboardInput","","An event from the keyboard has been received.",0],[12,"MouseMoved","","The cursor has moved on the window.",0],[12,"MouseWheel","","A positive value indicates that the wheel was rotated forward, away from the user;\na negative value indicates that the wheel was rotated backward, toward the user.",0],[12,"MouseInput","","An event from the mouse has been received.",0],[12,"Awakened","","The event loop was woken up by another thread.",0],[2,"ElementState","",""],[12,"Pressed","","",1],[12,"Released","","",1],[2,"MouseButton","",""],[12,"LeftMouseButton","","",2],[12,"RightMouseButton","","",2],[12,"MiddleMouseButton","","",2],[12,"OtherMouseButton","","",2],[2,"VirtualKeyCode","",""],[12,"Key1","","The '1' key over the letters.",3],[12,"Key2","","The '2' key over the letters.",3],[12,"Key3","","The '3' key over the letters.",3],[12,"Key4","","The '4' key over the letters.",3],[12,"Key5","","The '5' key over the letters.",3],[12,"Key6","","The '6' key over the letters.",3],[12,"Key7","","The '7' key over the letters.",3],[12,"Key8","","The '8' key over the letters.",3],[12,"Key9","","The '9' key over the letters.",3],[12,"Key0","","The '0' key over the 'O' and 'P' keys.",3],[12,"A","","",3],[12,"B","","",3],[12,"C","","",3],[12,"D","","",3],[12,"E","","",3],[12,"F","","",3],[12,"G","","",3],[12,"H","","",3],[12,"I","","",3],[12,"J","","",3],[12,"K","","",3],[12,"L","","",3],[12,"M","","",3],[12,"N","","",3],[12,"O","","",3],[12,"P","","",3],[12,"Q","","",3],[12,"R","","",3],[12,"S","","",3],[12,"T","","",3],[12,"U","","",3],[12,"V","","",3],[12,"W","","",3],[12,"X","","",3],[12,"Y","","",3],[12,"Z","","",3],[12,"Escape","","The Escape key, next to F1.",3],[12,"F1","","",3],[12,"F2","","",3],[12,"F3","","",3],[12,"F4","","",3],[12,"F5","","",3],[12,"F6","","",3],[12,"F7","","",3],[12,"F8","","",3],[12,"F9","","",3],[12,"F10","","",3],[12,"F11","","",3],[12,"F12","","",3],[12,"F13","","",3],[12,"F14","","",3],[12,"F15","","",3],[12,"Snapshot","","Print Screen/SysRq.",3],[12,"Scroll","","Scroll Lock.",3],[12,"Pause","","Pause/Break key, next to Scroll lock.",3],[12,"Insert","","`Insert`, next to Backspace.",3],[12,"Home","","",3],[12,"Delete","","",3],[12,"End","","",3],[12,"PageDown","","",3],[12,"PageUp","","",3],[12,"Left","","",3],[12,"Up","","",3],[12,"Right","","",3],[12,"Down","","",3],[12,"Back","","The Backspace key, right over Enter.",3],[12,"Return","","The Enter key.",3],[12,"Space","","The space bar.",3],[12,"Numlock","","",3],[12,"Numpad0","","",3],[12,"Numpad1","","",3],[12,"Numpad2","","",3],[12,"Numpad3","","",3],[12,"Numpad4","","",3],[12,"Numpad5","","",3],[12,"Numpad6","","",3],[12,"Numpad7","","",3],[12,"Numpad8","","",3],[12,"Numpad9","","",3],[12,"AbntC1","","",3],[12,"AbntC2","","",3],[12,"Add","","",3],[12,"Apostrophe","","",3],[12,"Apps","","",3],[12,"At","","",3],[12,"Ax","","",3],[12,"Backslash","","",3],[12,"Calculator","","",3],[12,"Capital","","",3],[12,"Colon","","",3],[12,"Comma","","",3],[12,"Convert","","",3],[12,"Decimal","","",3],[12,"Divide","","",3],[12,"Equals","","",3],[12,"Grave","","",3],[12,"Kana","","",3],[12,"Kanji","","",3],[12,"LAlt","","",3],[12,"LBracket","","",3],[12,"LControl","","",3],[12,"LMenu","","",3],[12,"LShift","","",3],[12,"LWin","","",3],[12,"Mail","","",3],[12,"MediaSelect","","",3],[12,"MediaStop","","",3],[12,"Minus","","",3],[12,"Multiply","","",3],[12,"Mute","","",3],[12,"MyComputer","","",3],[12,"NextTrack","","",3],[12,"NoConvert","","",3],[12,"NumpadComma","","",3],[12,"NumpadEnter","","",3],[12,"NumpadEquals","","",3],[12,"OEM102","","",3],[12,"Period","","",3],[12,"Playpause","","",3],[12,"Power","","",3],[12,"Prevtrack","","",3],[12,"RAlt","","",3],[12,"RBracket","","",3],[12,"RControl","","",3],[12,"RMenu","","",3],[12,"RShift","","",3],[12,"RWin","","",3],[12,"Semicolon","","",3],[12,"Slash","","",3],[12,"Sleep","","",3],[12,"Stop","","",3],[12,"Subtract","","",3],[12,"Sysrq","","",3],[12,"Tab","","",3],[12,"Underline","","",3],[12,"Unlabeled","","",3],[12,"VolumeDown","","",3],[12,"VolumeUp","","",3],[12,"Wake","","",3],[12,"Webback","","",3],[12,"WebFavorites","","",3],[12,"WebForward","","",3],[12,"WebHome","","",3],[12,"WebRefresh","","",3],[12,"WebSearch","","",3],[12,"WebStop","","",3],[12,"Yen","","",3],[2,"CreationError","","Error that can happen while creating a window or a headless renderer."],[12,"OsError","","",4],[12,"NotSupported","","",4],[2,"Api","","All APIs related to OpenGL that you can possibly get while using glutin."],[12,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",5],[12,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",5],[2,"MouseCursor","",""],[12,"Default","","The platform-dependent default cursor.",6],[12,"Crosshair","","A simple crosshair.",6],[12,"Hand","","A hand (often used to indicate links in web browsers).",6],[12,"Arrow","","Self explanatory.",6],[12,"Move","","Indicates something is to be moved.",6],[12,"Text","","Indicates text that may be selected or edited.",6],[12,"Wait","","Program busy indicator.",6],[12,"Help","","Help indicator (often rendered as a \"?\")",6],[12,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith \"Wait\" the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass. ",6],[12,"NotAllowed","","Cursor showing that something cannot be done.",6],[12,"ContextMenu","","",6],[12,"NoneCursor","","",6],[12,"Cell","","",6],[12,"VerticalText","","",6],[12,"Alias","","",6],[12,"Copy","","",6],[12,"NoDrop","","",6],[12,"Grab","","",6],[12,"Grabbing","","",6],[12,"AllScroll","","",6],[12,"ZoomIn","","",6],[12,"ZoomOut","","",6],[12,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor\nis used when the movement starts from the south-east corner of the box.",6],[12,"NResize","","",6],[12,"NeResize","","",6],[12,"NwResize","","",6],[12,"SResize","","",6],[12,"SeResize","","",6],[12,"SwResize","","",6],[12,"WResize","","",6],[12,"EwResize","","",6],[12,"NsResize","","",6],[12,"NeswResize","","",6],[12,"NwseResize","","",6],[12,"ColResize","","",6],[12,"RowResize","","",6],[3,"get_available_monitors","","Returns the list of all available monitors."],[3,"get_primary_monitor","","Returns the primary monitor of the system."],[10,"fmt","","",0],[10,"clone","","",0],[10,"clone","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"hash","","",1],[10,"fmt","","",1],[10,"clone","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"hash","","",2],[10,"fmt","","",2],[10,"clone","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"hash","","",3],[10,"fmt","","",3],[4,"ScanCode","",""],[10,"fmt","","",0],[10,"clone","","",0],[10,"clone","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"hash","","",1],[10,"fmt","","",1],[10,"clone","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"hash","","",2],[10,"fmt","","",2],[10,"clone","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"hash","","",3],[10,"fmt","","",3],[10,"eq","","",4],[10,"ne","","",4],[10,"fmt","","",4],[10,"clone","","",4],[10,"description","","",4],[10,"eq","","",5],[10,"ne","","",5],[10,"clone","","",5],[10,"fmt","","",5],[10,"fmt","","",6],[10,"new","","Initializes a new `WindowBuilder` with default values.",7],[10,"with_dimensions","","Requests the window to be of specific dimensions.",7],[10,"with_title","","Requests a specific title for the window.",7],[10,"with_fullscreen","","Requests fullscreen mode.",7],[10,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",7],[10,"with_gl_version","","Requests to use a specific OpenGL version.",7],[10,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",7],[10,"with_vsync","","Requests that the window has vsync enabled.",7],[10,"with_visibility","","Sets whether the window will be initially hidden or visible.",7],[10,"with_multisampling","","Sets the multisampling level to request.",7],[10,"with_depth_buffer","","Sets the number of bits in the depth buffer.",7],[10,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",7],[10,"with_pixel_format","","Sets the number of bits in the color buffer.",7],[10,"with_stereoscopy","","Request the backend to be stereoscopic.",7],[10,"build","","Builds the window.",7],[10,"build_strict","","Builds the window.",7],[10,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",8],[10,"with_gl_version","","Requests to use a specific OpenGL version.",8],[10,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",8],[10,"build","","Builds the headless context.",8],[10,"build_strict","","Builds the headless context.",8],[10,"default","","",9],[10,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",9],[10,"is_closed","","Returns true if the window has previously been closed by the user.",9],[10,"should_close","","Returns true if the window has previously been closed by the user.",9],[10,"set_title","","Modifies the title of the window.",9],[10,"show","","Shows the window if it was hidden.",9],[10,"hide","","Hides the window if it was visible.",9],[10,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",9],[10,"set_position","","Modifies the position of the window.",9],[10,"get_inner_size","","Returns the size in pixels of the client area of the window.",9],[10,"get_outer_size","","Returns the size in pixels of the window.",9],[10,"set_inner_size","","Modifies the inner size of the window.",9],[10,"poll_events","","Returns an iterator to all the events that are currently in the window's events queue.",9],[10,"wait_events","","Waits for an event, then returns an iterator to all the events that are currently\n in the window's events queue.",9],[10,"make_current","","Sets the context as the current context.",9],[10,"get_proc_address","","Returns the address of an OpenGL function.",9],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",9],[10,"platform_display","","Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",9],[10,"get_api","","Returns the API that is currently provided by this window.",9],[10,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",9],[10,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",9],[10,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",9],[10,"get_proc_addr","","",9],[10,"clone","","",10],[10,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",10],[10,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",11],[10,"get_proc_address","","Returns the address of an OpenGL function.",11],[10,"get_api","","Returns the API that is currently provided by this window.",11],[10,"set_window_resize_callback","","",11],[10,"get_proc_addr","","",11],[4,"Item","",""],[10,"next","","",12],[4,"Item","",""],[10,"next","","",13],[4,"Item","",""],[10,"next","","",14],[10,"get_name","","Returns a human-readable name of the monitor.",15],[10,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",15]],"paths":[[2,"Event"],[2,"ElementState"],[2,"MouseButton"],[2,"VirtualKeyCode"],[2,"CreationError"],[2,"Api"],[2,"MouseCursor"],[1,"WindowBuilder"],[1,"HeadlessRendererBuilder"],[1,"Window"],[1,"WindowProxy"],[1,"HeadlessContext"],[1,"PollEventsIterator"],[1,"WaitEventsIterator"],[1,"AvailableMonitorsIter"],[1,"MonitorID"]]};
searchIndex['gl_generator'] = {"items":[[0,"","gl_generator","# gl_generator"],[3,"generate_bindings","","Public function that generates Rust source code."],[0,"generators","",""],[3,"gen_type_aliases","gl_generator::generators","Generates all the type aliases for a namespace."],[3,"gen_parameters","","Generates the list of Rust `Arg`s that a `Cmd` requires."],[3,"gen_return_type","","Generates the Rust return type of a `Cmd`."],[3,"gen_symbol_name","","Generates the native symbol name of a `Cmd`."],[0,"global_gen","",""],[1,"GlobalGenerator","gl_generator::generators::global_gen",""],[10,"write","","",0],[0,"static_gen","gl_generator::generators",""],[1,"StaticGenerator","gl_generator::generators::static_gen",""],[10,"write","","",1],[0,"struct_gen","gl_generator::generators",""],[1,"StructGenerator","gl_generator::generators::struct_gen",""],[10,"write","","",2],[0,"static_struct_gen","gl_generator::generators",""],[1,"StaticStructGenerator","gl_generator::generators::static_struct_gen",""],[10,"write","","",3],[6,"Generator","gl_generator::generators","Trait for a bindings generator."],[9,"write","","Builds the GL bindings.",4],[0,"registry","gl_generator",""],[1,"Registry","gl_generator::registry",""],[11,"groups","","",5],[11,"enums","","",5],[11,"cmds","","",5],[11,"features","","",5],[11,"extensions","","",5],[11,"aliases","","",5],[1,"EnumIterator","",""],[1,"CmdIterator","",""],[1,"Group","",""],[11,"name","","",6],[11,"enums","","",6],[1,"EnumNs","",""],[11,"namespace","","",7],[11,"group","","",7],[11,"ty","","",7],[11,"start","","",7],[11,"end","","",7],[11,"vendor","","",7],[11,"comment","","",7],[11,"defs","","",7],[1,"Enum","",""],[11,"ident","","",8],[11,"value","","",8],[11,"alias","","",8],[11,"ty","","",8],[1,"CmdNs","",""],[11,"namespace","","",9],[11,"defs","","",9],[1,"Binding","",""],[11,"ident","","",10],[11,"ty","","",10],[11,"group","","",10],[1,"Cmd","",""],[11,"proto","","",11],[11,"params","","",11],[11,"is_safe","","True if this command doesn't take any pointers.",11],[11,"alias","","",11],[11,"vecequiv","","",11],[11,"glx","","",11],[1,"Feature","",""],[11,"api","","",12],[11,"name","","",12],[11,"number","","",12],[11,"requires","","",12],[11,"removes","","",12],[1,"Require","",""],[11,"comment","","",13],[11,"enums","","A reference to the earlier types, by name",13],[11,"commands","","A reference to the earlier types, by name",13],[1,"Remove","",""],[11,"profile","","",14],[11,"comment","","",14],[11,"enums","","A reference to the earlier types, by name",14],[11,"commands","","A reference to the earlier types, by name",14],[1,"Extension","",""],[11,"name","","",15],[11,"supported","","which apis this extension is defined for (see Feature.api)",15],[11,"requires","","",15],[1,"GlxOpcode","",""],[11,"ty","","",16],[11,"opcode","","",16],[11,"name","","",16],[11,"comment","","",16],[1,"Filter","",""],[11,"extensions","","",17],[11,"profile","","",17],[11,"version","","",17],[11,"api","","",17],[2,"Ns","",""],[12,"Gl","","",18],[12,"Glx","","",18],[12,"Wgl","","",18],[12,"Egl","","",18],[12,"Gles1","","",18],[12,"Gles2","","",18],[10,"fmt_struct_name","","",18],[10,"from_str","","",18],[10,"fmt","","",18],[10,"from_xml","","Generate a registry from the supplied XML string",5],[10,"get_tys","","Returns a set of all the types used in the supplied registry. This is useful\nfor working out what conversions are needed for the specific registry.",5],[10,"enum_iter","","",5],[10,"cmd_iter","","",5],[4,"Item","",""],[10,"next","","",19],[4,"Item","",""],[10,"next","","",20],[10,"clone","","",12],[10,"clone","","",13],[10,"clone","","",14],[10,"clone","","",15]],"paths":[[1,"GlobalGenerator"],[1,"StaticGenerator"],[1,"StructGenerator"],[1,"StaticStructGenerator"],[6,"Generator"],[1,"Registry"],[1,"Group"],[1,"EnumNs"],[1,"Enum"],[1,"CmdNs"],[1,"Binding"],[1,"Cmd"],[1,"Feature"],[1,"Require"],[1,"Remove"],[1,"Extension"],[1,"GlxOpcode"],[1,"Filter"],[2,"Ns"],[1,"EnumIterator"],[1,"CmdIterator"]]};

searchIndex['xml'] = {"items":[[0,"","xml","This crate currently provides almost XML 1.0/1.1-compliant pull parser."],[0,"macros","","Contains several macros used in this crate."],[0,"name","",""],[1,"Name","xml::name","Represents a qualified XML name."],[11,"local_name","","A local name, e.g. `string` in `xsi:string`.",0],[11,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",0],[11,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",0],[1,"OwnedName","","An owned variant of `Name`."],[11,"local_name","","A local name, e.g. `string` in `xsi:string`.",1],[11,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",1],[11,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",1],[10,"hash","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"clone","","",0],[10,"fmt","","",0],[10,"fmt","","",0],[10,"to_owned","","Returns an owned variant of the qualified name.",0],[10,"local","","Returns a new `Name` instance representing plain local name.",0],[10,"qualified","","Returns a new `Name` instance representing a qualified name with or without a prefix and\nwith a namespace URI.",0],[10,"to_repr","","Returns correct XML representation of this local name and prefix.",0],[10,"hash","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[10,"fmt","","",1],[10,"fmt","","",1],[10,"borrow","","Constructs a borrowed `Name` based on this owned name.",1],[10,"local","","Returns a new `OwnedName` instance representing a plain local name.",1],[10,"qualified","","Returns a new `OwnedName` instance representing a qualified name with or without\na prefix and with a namespace URI.",1],[10,"prefix_as_ref","","Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\nbut avoids extra work.",1],[10,"namespace_as_ref","","Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\nbut avoids extra work.",1],[10,"to_repr","","See `Name::to_repr()` for details.",1],[10,"from_str","","Parses the given string slice into a qualified name.",1],[0,"attribute","xml",""],[1,"Attribute","xml::attribute","A borrowed version of an XML attribute."],[11,"name","","Attribute name.",2],[11,"value","","Attribute value.",2],[1,"OwnedAttribute","",""],[11,"name","","",3],[11,"value","","",3],[10,"hash","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"clone","","",2],[10,"fmt","","",2],[10,"to_owned","","",2],[10,"new","","",2],[10,"hash","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"clone","","",3],[10,"borrow","","",3],[10,"new","","",3],[10,"fmt","","",3],[0,"common","xml","Contains several types used throughout the library."],[1,"Error","xml::common","XML parsing error."],[2,"XmlVersion","","XML version enumeration."],[12,"Version10","","XML version 1.0.",4],[12,"Version11","","XML version 1.1.",4],[3,"is_whitespace_char","","Checks whether the given character is a white space character (`S`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[3,"is_name_start_char","","Checks whether the given character is a name start character (`NameStartChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[3,"is_name_char","","Checks whether the given character is a name character (`NameChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[6,"HasPosition","","Represents a thing which has a position inside some textual document."],[9,"row","","Returns a line number inside the document.",5],[9,"col","","Returns a column number inside the document.",5],[10,"eq","","",6],[10,"ne","","",6],[10,"clone","","",6],[10,"fmt","","",6],[10,"row","","",6],[10,"col","","",6],[10,"new","","Creates a new error using position information from the provided\n`HasPosition` object and a message.",6],[10,"new_full","","Creates a new error using provided position information and a message.",6],[10,"msg","","Returns a reference to a message which is contained inside this error.",6],[10,"description","","",6],[10,"detail","","",6],[10,"eq","","",4],[10,"ne","","",4],[10,"clone","","",4],[10,"fmt","","",4],[0,"escape","xml",""],[3,"escape_str","xml::escape","Performs escaping of common XML characters."],[0,"namespace","xml",""],[1,"Namespace","xml::namespace","Namespace is a map from prefixes to namespace URIs."],[1,"NamespaceMappings","","An iterator over mappings from prefixes to URIs in a namespace."],[1,"NamespaceStack","","Namespace stack is a sequence of namespaces."],[1,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a namespace stack."],[4,"UriMapping","",""],[18,"NS_XMLNS_PREFIX","",""],[18,"NS_XMLNS_URI","",""],[18,"NS_XML_PREFIX","",""],[18,"NS_XML_URI","",""],[18,"NS_EMPTY_URI","",""],[6,"NamespaceIterable","","Denotes something which contains namespace URI mappings."],[17,"Iter","xml::namespace::NamespaceIterable",""],[9,"uri_mappings","xml::namespace","",7],[10,"clone","","",8],[10,"eq","","",8],[10,"ne","","",8],[10,"empty","","Returns an empty namespace.",8],[10,"is_empty","","Checks whether this namespace is empty.",8],[10,"is_essentially_empty","","Checks whether this namespace is essentially empty, that is, it does not contain\nanything but the default mappings.",8],[10,"put","","Puts a mapping into this namespace.",8],[10,"force_put","","Puts a mapping into this namespace forcefully.",8],[10,"get","","Queries the namespace for the given prefix.",8],[4,"Item","",""],[10,"next","","",9],[4,"Iter","",""],[10,"uri_mappings","","",8],[10,"eq","","",10],[10,"ne","","",10],[10,"clone","","",10],[10,"empty","","Returns an empty namespace stack.",10],[10,"default","","Returns a namespace stack with default items in it.",10],[10,"push_empty","","Adds an empty namespace to the top of this stack.",10],[10,"pop","","Removes a namespace at the top of the stack.",10],[10,"peek","","Returns a namespace at the top of the stack, leaving the stack intact.",10],[10,"put","","Puts a mapping into the topmost namespace in this stack.",10],[10,"get","","Performs a search for the given prefix in the whole stack.",10],[10,"squash","","Combines this stack of namespaces into a single namespace.",10],[4,"Item","",""],[10,"next","","",11],[4,"Iter","",""],[10,"uri_mappings","","",10],[0,"reader","xml","Contains high-level interface for a pull-based XML parser."],[1,"EventReader","xml::reader","Simple wrapper around an `std::io::Buffer` which provides pull-based XML parsing."],[1,"Events","","XML events iterator, created by `events()` method on `Parser`."],[0,"config","","Contains parser configuration structure."],[1,"ParserConfig","xml::reader::config","Parser configuration structure."],[11,"trim_whitespace","","Whether or not should whitespace be removed. Default is false.",12],[11,"whitespace_to_characters","","Whether or not should whitespace be converted to characters.\nDefault is false.",12],[11,"cdata_to_characters","","Whether or not should CDATA be converted to characters.\nDefault is false.",12],[11,"ignore_comments","","Whether or not should comments be omitted. Default is true.",12],[11,"coalesce_characters","","Whether or not should sequential `Characters` events be merged.\nDefault is true.",12],[10,"new","","Returns a new config with default values.",12],[10,"trim_whitespace","","Sets the field to the provided value and returns updated config object.",12],[10,"whitespace_to_characters","","Sets the field to the provided value and returns updated config object.",12],[10,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",12],[10,"ignore_comments","","Sets the field to the provided value and returns updated config object.",12],[10,"coalesce_characters","","Sets the field to the provided value and returns updated config object.",12],[0,"events","xml::reader","Contains `XmlEvent` datatype, instances of which are emitted by the parser."],[2,"XmlEvent","xml::reader::events","An element of an XML input stream."],[12,"StartDocument","","Corresponds to XML document declaration.",13],[11,"version","xml::reader::events::XmlEvent","XML version.",13],[11,"encoding","","XML document encoding.",13],[11,"standalone","","XML standalone declaration.",13],[12,"EndDocument","xml::reader::events","Denotes to the end of the document stream.",13],[12,"ProcessingInstruction","","Denotes an XML processing instruction.",13],[11,"name","xml::reader::events::XmlEvent","Processing instruction target.",13],[11,"data","","Processing instruction content.",13],[12,"StartElement","xml::reader::events","Denotes a beginning of an XML element.",13],[11,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[11,"attributes","","A list of attributes associated with the element.",13],[11,"namespace","","Contents of the namespace mapping at this point of the document.",13],[12,"EndElement","xml::reader::events","Denotes an end of an XML document.",13],[11,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[12,"CData","xml::reader::events","Denotes CDATA content.",13],[12,"Comment","","Denotes a comment.",13],[12,"Characters","","Denotes character data outside of tags.",13],[12,"Whitespace","","Denotes a chunk of whitespace outside of tags.",13],[12,"Error","","Denotes parsing error.",13],[10,"clone","","",13],[10,"eq","","",13],[10,"ne","","",13],[10,"fmt","","",13],[10,"as_writer_event","","",13],[10,"new","xml::reader","Creates a new parser, consuming given `Buffer`.",14],[10,"new_with_config","","Creates a new parser with the provded configuration, consuming given `Buffer`.",14],[10,"next","","Pulls and returns next XML event from the stream.",14],[10,"events","","Returns an iterator over XML events.",14],[4,"Item","",""],[10,"next","","",15],[10,"new_from_string","","Convenience method to create a reader from an owned string.",14],[10,"new_from_bytes","","Convenience method to create a reader from an owned vector of bytes.",14],[10,"new_from_str_slice","","Convenience method to create a reader from a string slice.",14],[10,"new_from_bytes_slice","","Convenience method to create a reader from a slice of bytes.",14],[0,"writer","xml",""],[1,"EventWriter","xml::writer",""],[0,"config","","Contains emitter configuration structure."],[1,"EmitterConfig","xml::writer::config","Emitter configuration structure."],[11,"line_separator","","Line separator used to separate lines in formatted output. Default is `\"\\n\"`.",16],[11,"indent_string","","A string which will be used for a single level of indentation. Default is `\"  \"`\n(two spaces).",16],[11,"perform_indent","","Whether or not the emitted document should be indented. Default is false.",16],[11,"write_document_declaration","","Whether or not to write XML document declaration at the beginning of a document.\nDefault is true.",16],[11,"normalize_empty_elements","","Whether or not to convert elements with empty content to empty elements. Default is true.",16],[11,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters. Default is false.",16],[10,"new","","Creates an emitter configuration with default values.",16],[10,"line_separator","","Sets the field to the provided value and returns updated config object.",16],[10,"indent_string","","Sets the field to the provided value and returns updated config object.",16],[10,"perform_indent","","Sets the field to the provided value and returns updated config object.",16],[10,"write_document_declaration","","Sets the field to the provided value and returns updated config object.",16],[10,"normalize_empty_elements","","Sets the field to the provided value and returns updated config object.",16],[10,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",16],[0,"events","xml::writer",""],[2,"XmlEvent","xml::writer::events","An element of an XML output stream."],[12,"StartDocument","","Corresponds to XML document declaration.",17],[11,"version","xml::writer::events::XmlEvent","XML version.",17],[11,"encoding","","XML document encoding.",17],[11,"standalone","","XML standalone declaration.",17],[12,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",17],[11,"name","xml::writer::events::XmlEvent","Processing instruction target.",17],[11,"data","","Processing instruction content.",17],[12,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",17],[11,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[11,"attributes","","A list of attributes associated with the element.",17],[11,"namespace","","Contents of the namespace mapping at this point of the document.",17],[12,"EndElement","xml::writer::events","Denotes an end of an XML document.",17],[11,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[12,"CData","xml::writer::events","Denotes CDATA content.",17],[12,"Comment","","Denotes a comment.",17],[12,"Characters","","Denotes character data outside of tags.",17],[4,"EventWriterResult","xml::writer",""],[10,"new","","",18],[10,"new_with_config","","",18],[10,"write","","",18],[10,"new_into_mem","","",18],[10,"new_into_mem_config","","",18],[0,"util","xml",""],[1,"ClonedPairwise","xml::util",""],[6,"OptionBorrowExt","",""],[9,"borrow_internals","","",19],[6,"IntoOwned","",""],[9,"into_owned","","",20],[6,"IteratorClonedPairwiseExt","",""],[9,"cloned_pairwise","","",21],[10,"borrow_internals","core::option","",22],[4,"Item","xml::util",""],[10,"next","","",23]],"paths":[[1,"Name"],[1,"OwnedName"],[1,"Attribute"],[1,"OwnedAttribute"],[2,"XmlVersion"],[6,"HasPosition"],[1,"Error"],[6,"NamespaceIterable"],[1,"Namespace"],[1,"NamespaceMappings"],[1,"NamespaceStack"],[1,"NamespaceStackMappings"],[1,"ParserConfig"],[2,"XmlEvent"],[1,"EventReader"],[1,"Events"],[1,"EmitterConfig"],[2,"XmlEvent"],[1,"EventWriter"],[6,"OptionBorrowExt"],[6,"IntoOwned"],[6,"IteratorClonedPairwiseExt"],[2,"Option"],[1,"ClonedPairwise"]]};

searchIndex['log'] = {"items":[[0,"","log","Utilities for program-wide and customizable logging"],[1,"LogLevel","","Wraps the log level with fmt implementations."],[1,"LogRecord","","A LogRecord is created by the logging macros, and passed as the only\nargument to Loggers."],[11,"module_path","","The module path of where the LogRecord originated.",0],[11,"level","","The LogLevel of this record.",0],[11,"args","","The arguments from the log line.",0],[11,"file","","The file of where the LogRecord originated.",0],[11,"line","","The line number of where the LogRecord originated.",0],[3,"set_logger","","Replaces the task-local logger with the specified logger, returning the old\nlogger."],[0,"macros","","Logging macros"],[18,"MAX_LOG_LEVEL","","Maximum logging level of a module that can be specified. Common logging\nlevels are found in the DEBUG/INFO/WARN/ERROR constants."],[18,"DEBUG","","Debug log level"],[18,"INFO","","Info log level"],[18,"WARN","","Warn log level"],[18,"ERROR","","Error log level"],[6,"Logger","","A trait used to represent an interface to a task-local logger. Each task\ncan have its own custom logger which can respond to logging messages\nhowever it likes."],[9,"log","","Logs a single message described by the `record`.",1],[10,"fmt","","",2],[10,"partial_cmp","","",2],[10,"lt","","",2],[10,"le","","",2],[10,"gt","","",2],[10,"ge","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"fmt","","",2],[10,"fmt","","",0],[15,"log!","","The standard logging macro"],[15,"error!","","A convenience macro for logging at the error log level."],[15,"warn!","","A convenience macro for logging at the warning log level."],[15,"info!","","A convenience macro for logging at the info log level."],[15,"debug!","","A convenience macro for logging at the debug log level. This macro can also\nbe omitted at compile time by passing `--cfg ndebug` to the compiler. If\nthis option is not passed, then debug statements will be compiled."],[15,"log_enabled!","","A macro to test whether a log level is enabled for the current module."]],"paths":[[1,"LogRecord"],[6,"Logger"],[1,"LogLevel"]]};

searchIndex['regex'] = {"items":[[0,"","regex","This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst case performance. The specific syntax supported is\ndocumented further down."],[1,"Error","","Error corresponds to something that can go wrong while parsing\na regular expression."],[11,"pos","","The *approximate* character index of where the error occurred.",0],[11,"msg","","A message describing the error.",0],[1,"Captures","","Captures represents a group of captured strings for a single match."],[1,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression."],[1,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression."],[1,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression."],[1,"FindMatches","","An iterator over all non-overlapping matches for a particular string."],[1,"NoExpand","","NoExpand indicates literal string replacement."],[1,"RegexSplits","","Yields all substrings delimited by a regular expression match."],[1,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match."],[2,"Regex","","A compiled regular expression"],[3,"quote","","Escapes all regular expression meta characters in `text`."],[3,"is_match","","Tests if the given regular expression matches somewhere in the text given."],[10,"fmt","","",0],[10,"fmt","","",0],[10,"clone","","",1],[10,"fmt","","Shows the original regular expression.",1],[10,"fmt","","Shows the original regular expression.",1],[10,"new","","Compiles a dynamic regular expression. Once compiled, it can be\nused repeatedly to search, split or replace text in a string.",1],[10,"is_match","","Returns true if and only if the regex matches the string given.",1],[10,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",1],[10,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",1],[10,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",1],[10,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter` (except it\nyields information about submatches).",1],[10,"split","","Returns an iterator of substrings of `text` delimited by a match\nof the regular expression.\nNamely, each element of the iterator corresponds to text that *isn't*\nmatched by the regular expression.",1],[10,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.)\nNamely, each element of the iterator corresponds to text that *isn't*\nmatched by the regular expression.\nThe remainder of the string that is not split will be the last element\nin the iterator.",1],[10,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.",1],[10,"replace_all","","Replaces all non-overlapping matches in `text` with the\nreplacement provided. This is the same as calling `replacen` with\n`limit` set to `0`.",1],[10,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",1],[10,"as_str","","Returns the original string of this regex.",1],[10,"reg_replace","","",2],[10,"next","","",3],[10,"next","","",4],[10,"pos","","Returns the start and end positions of the Nth capture group.\nReturns `None` if `i` is not a valid capture group or if the capture\ngroup did not match anything.\nThe positions returned are *always* byte indices with respect to the\noriginal string matched.",5],[10,"at","","Returns the matched string for the capture group `i`.  If `i` isn't\na valid capture group or didn't match anything, then `None` is\nreturned.",5],[10,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn't a valid capture group or didn't match anything, then\n`None` is returned.",5],[10,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",5],[10,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",5],[10,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",5],[10,"len","","Returns the number of captured groups.",5],[10,"is_empty","","Returns if there are no captured groups.",5],[10,"next","","",6],[10,"next","","",7],[10,"next","","",8],[10,"next","","",9],[6,"Replacer","","Replacer describes types that can be used to replace matches in a string."],[9,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",10]],"paths":[[1,"Error"],[2,"Regex"],[1,"NoExpand"],[1,"RegexSplits"],[1,"RegexSplitsN"],[1,"Captures"],[1,"SubCaptures"],[1,"SubCapturesPos"],[1,"FindCaptures"],[1,"FindMatches"],[6,"Replacer"]]};

searchIndex['khronos_api'] = {"items":[[0,"","khronos_api","This crates contains the sources of the official OpenGL repository."],[5,"GL_XML","","Content of the official `gl.xml` file."],[5,"EGL_XML","","Content of the official `egl.xml` file."],[5,"WGL_XML","","Content of the official `wgl.xml` file."],[5,"GLX_XML","","Content of the official `glx.xml` file."]],"paths":[]};

searchIndex['gl_common'] = {"items":[[0,"","gl_common","Defines everything used by `gl_generator`."],[6,"GlFunctionsSource","",""],[9,"get_proc_addr","","",0]],"paths":[[6,"GlFunctionsSource"]]};

initSearch(searchIndex);
